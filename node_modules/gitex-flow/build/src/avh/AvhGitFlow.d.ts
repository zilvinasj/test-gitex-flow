import { GitFlow } from '../api/GitFlow';
import { GitFlowBranch } from '../api/branches/GitFlowBranch';
import { GitFlowConfig } from '../configs/GitFlowConfig';
import { ConfigProvider } from '../api/ConfigProvider';
/**
 * Implementation of git flow by [gitflow-avh](https://github.com/petervanderdoes/gitflow-avh).
 */
export declare class AvhGitFlow implements GitFlow {
    private logger;
    readonly feature: GitFlowBranch;
    readonly bugfix: GitFlowBranch;
    readonly release: GitFlowBranch;
    readonly hotfix: GitFlowBranch;
    readonly support: GitFlowBranch;
    readonly config: ConfigProvider<GitFlowConfig>;
    private repositoryPath?;
    /**
     * Initializes a new instance of this class.
     *
     * @param repoPath - The path to the git repository.
     */
    constructor(repoPath?: string);
    /**
     * {@inheritdoc}
     *
     * @param config - The git flow configuration.
     * @param force - Force reinitialisation if git flow already initialized.
     */
    init(config?: GitFlowConfig, force?: boolean): Promise<void>;
    /**
     * {@inheritdoc}
     *
     * @returns The AVH git flow version.
     */
    version(): Promise<string>;
}
