"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AvhBranchListParser = void 0;
/**
 * Parser of the AVH branch list retrieved by 'git flow <branchName> list'.
 */
class AvhBranchListParser {
    /**
     * Parses the shell answer of AVH implementation.
     *
     * @param list - List retrived by the shell command 'git flow <branchName> list'.
     *
     * @returns The branch list.
     */
    static parse(list) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            // No '*' branches exists
            if (list.startsWith('No ')) {
                return [];
            }
            const matches = list.match(/^[\s\\*]{2}.+$/gm);
            return (_a = matches === null || matches === void 0 ? void 0 : matches.map((m) => m.substr(2))) !== null && _a !== void 0 ? _a : [];
        });
    }
}
exports.AvhBranchListParser = AvhBranchListParser;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXZoQnJhbmNoTGlzdFBhcnNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hdmgvQXZoQnJhbmNoTGlzdFBhcnNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTs7R0FFRztBQUNILE1BQWEsbUJBQW1CO0lBQzlCOzs7Ozs7T0FNRztJQUNJLE1BQU0sQ0FBTyxLQUFLLENBQUMsSUFBWTs7O1lBQ3BDLHlCQUF5QjtZQUN6QixJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEVBQUU7Z0JBQzFCLE9BQU8sRUFBRSxDQUFDO2FBQ1g7WUFDRCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7WUFDL0MsT0FBTyxNQUFBLE9BQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsbUNBQUksRUFBRSxDQUFDOztLQUMvQztDQUNGO0FBaEJELGtEQWdCQyJ9