"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReleaseGitFlowBranch = void 0;
const AvhGitFlowBranch_1 = require("./AvhGitFlowBranch");
/**
 * This class wraps the release branch of the AVH implementation.
 */
class ReleaseGitFlowBranch extends AvhGitFlowBranch_1.AvhGitFlowBranch {
    /**
     * Initializes a new instance of this class.
     *
     * @param repoPath - The path to the git repository.
     * @param configProvider - Git flow config provider.
     */
    constructor(repoPath, configProvider) {
        super(repoPath);
        /**
         * {@inheritdoc}
         */
        this.type = 'release';
        /**
         * {@inheritdoc}
         */
        this.defaultBase = 'develop';
        this.configProvider = configProvider;
    }
    /**
     * {@inheritdoc}
     *
     * @returns The configuration of the release git flow branch.
     */
    getConfig() {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const config = yield ((_a = this.configProvider) === null || _a === void 0 ? void 0 : _a.get());
            return {
                prefix: config === null || config === void 0 ? void 0 : config.releaseBranchPrefix,
            };
        });
    }
}
exports.ReleaseGitFlowBranch = ReleaseGitFlowBranch;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVsZWFzZUdpdEZsb3dCcmFuY2guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvYXZoL2JyYW5jaGVzL1JlbGVhc2VHaXRGbG93QnJhbmNoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUlBLHlEQUFzRDtBQUV0RDs7R0FFRztBQUNILE1BQWEsb0JBQXFCLFNBQVEsbUNBQWdCO0lBYXhEOzs7OztPQUtHO0lBQ0gsWUFBWSxRQUFpQixFQUFFLGNBQThDO1FBQzNFLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztRQWpCbEI7O1dBRUc7UUFDYSxTQUFJLEdBQXNCLFNBQVMsQ0FBQztRQUVwRDs7V0FFRztRQUNhLGdCQUFXLEdBQTBCLFNBQVMsQ0FBQztRQVU3RCxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztJQUN2QyxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNVLFNBQVM7OztZQUNwQixNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUEsTUFBQSxJQUFJLENBQUMsY0FBYywwQ0FBRSxHQUFHLEVBQUUsQ0FBQSxDQUFDO1lBQ2hELE9BQU87Z0JBQ0wsTUFBTSxFQUFFLE1BQU0sYUFBTixNQUFNLHVCQUFOLE1BQU0sQ0FBRSxtQkFBbUI7YUFDcEMsQ0FBQzs7S0FDSDtDQUNGO0FBbkNELG9EQW1DQyJ9