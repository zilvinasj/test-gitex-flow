"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AvhGitFlow = void 0;
const GitFlowBashExecuter_1 = require("./GitFlowBashExecuter");
const AvhConfigProvider_1 = require("./AvhConfigProvider");
const FeatureGitFlowBranch_1 = require("./branches/FeatureGitFlowBranch");
const BugfixGitFlowBranch_1 = require("./branches/BugfixGitFlowBranch");
const ReleaseGitFlowBranch_1 = require("./branches/ReleaseGitFlowBranch");
const HotfixGitFlowBranch_1 = require("./branches/HotfixGitFlowBranch");
const SupportGitFlowBranch_1 = require("./branches/SupportGitFlowBranch");
const log4js_1 = require("log4js");
/**
 * Implementation of git flow by [gitflow-avh](https://github.com/petervanderdoes/gitflow-avh).
 */
class AvhGitFlow {
    /**
     * Initializes a new instance of this class.
     *
     * @param repoPath - The path to the git repository.
     */
    constructor(repoPath) {
        this.logger = log4js_1.getLogger('AvhGitFlow');
        this.repositoryPath = repoPath;
        this.config = new AvhConfigProvider_1.AvhConfigProvider(repoPath);
        this.feature = new FeatureGitFlowBranch_1.FeatureGitFlowBranch(repoPath, this.config);
        this.bugfix = new BugfixGitFlowBranch_1.BugfixGitFlowBranch(repoPath, this.config);
        this.release = new ReleaseGitFlowBranch_1.ReleaseGitFlowBranch(repoPath, this.config);
        this.hotfix = new HotfixGitFlowBranch_1.HotfixGitFlowBranch(repoPath, this.config);
        this.support = new SupportGitFlowBranch_1.SupportGitFlowBranch(repoPath, this.config);
    }
    /**
     * {@inheritdoc}
     *
     * @param config - The git flow configuration.
     * @param force - Force reinitialisation if git flow already initialized.
     */
    init(config, force) {
        return __awaiter(this, void 0, void 0, function* () {
            let options = '-d';
            if (force == true) {
                options += ' -f';
            }
            let output = yield GitFlowBashExecuter_1.GitFlowBashExecuter.execute({
                action: 'init',
                repositoryPath: this.repositoryPath,
                options: options,
            });
            output = output.trim();
            const alreadyInitialized = 'Already initialized for gitflow.';
            if (output.startsWith(alreadyInitialized)) {
                throw new Error(alreadyInitialized);
            }
            this.logger.info(output);
            if (config) {
                yield this.config.set(config);
            }
        });
    }
    /**
     * {@inheritdoc}
     *
     * @returns The AVH git flow version.
     */
    version() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield GitFlowBashExecuter_1.GitFlowBashExecuter.execute({
                action: 'version',
            });
        });
    }
}
exports.AvhGitFlow = AvhGitFlow;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXZoR2l0Rmxvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hdmgvQXZoR2l0Rmxvdy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFFQSwrREFBNEQ7QUFHNUQsMkRBQXdEO0FBQ3hELDBFQUF1RTtBQUN2RSx3RUFBcUU7QUFDckUsMEVBQXVFO0FBQ3ZFLHdFQUFxRTtBQUNyRSwwRUFBdUU7QUFDdkUsbUNBQTJDO0FBRTNDOztHQUVHO0FBQ0gsTUFBYSxVQUFVO0lBWXJCOzs7O09BSUc7SUFDSCxZQUFZLFFBQWlCO1FBaEJyQixXQUFNLEdBQVcsa0JBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQWlCL0MsSUFBSSxDQUFDLGNBQWMsR0FBRyxRQUFRLENBQUM7UUFDL0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLHFDQUFpQixDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzlDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSwyQ0FBb0IsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQy9ELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSx5Q0FBbUIsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSwyQ0FBb0IsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQy9ELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSx5Q0FBbUIsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSwyQ0FBb0IsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNVLElBQUksQ0FBQyxNQUFzQixFQUFFLEtBQWU7O1lBQ3ZELElBQUksT0FBTyxHQUFHLElBQUksQ0FBQztZQUNuQixJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUU7Z0JBQ2pCLE9BQU8sSUFBSSxLQUFLLENBQUM7YUFDbEI7WUFDRCxJQUFJLE1BQU0sR0FBRyxNQUFNLHlDQUFtQixDQUFDLE9BQU8sQ0FBQztnQkFDN0MsTUFBTSxFQUFFLE1BQU07Z0JBQ2QsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUFjO2dCQUNuQyxPQUFPLEVBQUUsT0FBTzthQUNqQixDQUFDLENBQUM7WUFDSCxNQUFNLEdBQUcsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ3ZCLE1BQU0sa0JBQWtCLEdBQUcsa0NBQWtDLENBQUM7WUFDOUQsSUFBSSxNQUFNLENBQUMsVUFBVSxDQUFDLGtCQUFrQixDQUFDLEVBQUU7Z0JBQ3pDLE1BQU0sSUFBSSxLQUFLLENBQUMsa0JBQWtCLENBQUMsQ0FBQzthQUNyQztZQUNELElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3pCLElBQUksTUFBTSxFQUFFO2dCQUNWLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDL0I7UUFDSCxDQUFDO0tBQUE7SUFFRDs7OztPQUlHO0lBQ1UsT0FBTzs7WUFDbEIsT0FBTyxNQUFNLHlDQUFtQixDQUFDLE9BQU8sQ0FBQztnQkFDdkMsTUFBTSxFQUFFLFNBQVM7YUFDbEIsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztLQUFBO0NBQ0Y7QUFoRUQsZ0NBZ0VDIn0=