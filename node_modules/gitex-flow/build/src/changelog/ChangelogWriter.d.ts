/// <reference types="node" />
import { GitLog } from '../git';
import { GitRepositoryContext } from '../git/GitRepositoryContext';
import { Readable } from 'stream';
/**
 * Options of the ChangelogWriter.
 */
export interface ChangelogWriterOptions {
    /**
     * Path to the node project folder / git repository.
     */
    basePath?: string;
    /**
     * Specifies the name of the changelog.
     *
     * *DEFAULT*: CHANGELOG.md
     */
    changelogFileName?: string;
    /**
     * Set this flag to keep the changelog of the latest release as [[changelogFileName]].latest.md.
     * This file can be useful for some other tools which processes the release information (ex. gitlab).
     */
    storeLatestChangelog?: boolean;
}
/**
 * Builder for a changelog.
 */
export declare abstract class ChangelogWriter {
    static readonly DefaultChangelogFile = "CHANGELOG.md";
    private readonly logger;
    private readonly opt;
    /**
     * Initializes a new instance of this class.
     *
     * @param options - The options of the instance.
     */
    constructor(options: ChangelogWriterOptions);
    /**
     * Writes a changelog.
     *
     * @param context - The context information of the git repository.
     * @param logs - The conventional git logs since the last release.
     */
    write(context: GitRepositoryContext, logs: GitLog[]): Promise<void>;
    /**
     * Derives the name of the seperated latest changelog from the main changelog name.
     *
     * @param changelogFileName - The name of the main changelog.
     *
     * @returns The derived name for the latest changelog.
     */
    static getLatestChangelogName(changelogFileName: string): string;
    /**
     * Creates a changelog stream from the commits since the last release.
     *
     * @param context - The context information of the git repository.
     * @param logs - The conventional git logs since the last release.
     */
    protected abstract createLatestChangelogStream(context: GitRepositoryContext, logs: GitLog[]): Promise<Readable>;
    /**
     * Merges a changelog stream from the commits since the last release.
     *
     * @param context - The context information of the git repository.
     * @param logs - The conventional git logs since the last release.
     * @param context - The context information of the git repository.
     */
    protected abstract mergeWithChangelog(latestChangelogStream: Readable, changelogPath: string, context?: GitRepositoryContext): Promise<Readable>;
}
