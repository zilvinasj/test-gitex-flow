import { GitFlowBranch } from '../../api/branches/GitFlowBranch';
import { ProjectConfig } from '../../configs/ProjectConfig';
import { GFlowBranch } from './GFlowBranch';
/**
 * This class extending a hotfix branch with some helpful functionality.
 */
export declare class GFlowHotFixBranch extends GFlowBranch {
    /**
     * Initializes a new instance of this class.
     *
     * @param gitFlowBranch - Git flow branch to be wrapped.
     * @param options - Git flow node project options.
     */
    constructor(gitFlowBranch: GitFlowBranch, options?: ProjectConfig);
    /**
     * Creates and starts a new hotfix branch.
     *
     * @param name - Name of the branch to be started.
     * @param base - Base of the branch should be started from.
     *
     * @returns The name of the hotfix branch.
     */
    start(name?: string, base?: string): Promise<string>;
    /**
     * Merges and finishes the branch of the branch type '[[type]]'.
     *
     * @param name - Name of the branch to be finished.
     * @param msg - Message to be set for finishing the branch.
     */
    finish(name?: string, msg?: string): Promise<void>;
    private getVersion;
}
