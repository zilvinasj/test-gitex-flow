#!/usr/bin/env node
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = require("commander");
const AvhGitFlow_1 = require("./avh/AvhGitFlow");
const GFlow_1 = require("./gflow/GFlow");
const Utils_1 = require("./tools/Utils");
const GFlowConfigLoader_1 = require("./tools/GFlowConfigLoader");
const command = new commander_1.Command('git flow');
const gitFlow = new AvhGitFlow_1.AvhGitFlow();
const gFlowConfig = GFlowConfigLoader_1.GFlowConfigLoader.load();
const gFlow = new GFlow_1.GFlow(gitFlow, gFlowConfig);
// Init command
command.command('init').action(() => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => gFlow.init());
}));
// Config command
command.command('config').action(() => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => Utils_1.Utils.printConfig(gFlow));
}));
// Feature command
const feature = command.command('feature').action(() => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => Utils_1.Utils.printBranches(gFlow.feature));
}));
feature.command('start <name>').action((name) => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => gFlow.feature.start(name));
}));
feature.command('finish [name]').action((name) => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => gFlow.feature.finish(name));
}));
// BugFix command
const bugfix = command.command('bugfix').action(() => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => Utils_1.Utils.printBranches(gFlow.bugfix));
}));
bugfix.command('start <name>').action((name) => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => gFlow.bugfix.start(name));
}));
bugfix.command('finish [name]').action((name) => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => gFlow.bugfix.finish(name));
}));
// Release command
const release = command.command('release').action(() => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => Utils_1.Utils.printBranches(gFlow.release));
}));
release.command('start [name]').action((name) => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => gFlow.release.start(name));
}));
release.command('finish [name]').action((name) => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => gFlow.release.finish(name));
}));
// HotFix command
const hotfix = command.command('hotfix').action(() => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => Utils_1.Utils.printBranches(gFlow.hotfix));
}));
hotfix.command('start [name]').action((name) => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => gFlow.hotfix.start(name));
}));
hotfix.command('finish [name]').action((name) => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => gFlow.hotfix.finish(name));
}));
// support command
const support = command.command('support').action(() => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => Utils_1.Utils.printBranches(gFlow.support));
}));
support.command('start <name> [base]').action((name, base) => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => gFlow.support.start(name, base));
}));
support.command('finish [name]').action((name) => __awaiter(void 0, void 0, void 0, function* () {
    yield Utils_1.Utils.exec(() => gFlow.support.finish(name));
}));
command.parse(process.argv);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NsaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFFQSx5Q0FBb0M7QUFDcEMsaURBQThDO0FBQzlDLHlDQUFzQztBQUN0Qyx5Q0FBc0M7QUFDdEMsaUVBQThEO0FBRTlELE1BQU0sT0FBTyxHQUFHLElBQUksbUJBQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUN4QyxNQUFNLE9BQU8sR0FBRyxJQUFJLHVCQUFVLEVBQUUsQ0FBQztBQUVqQyxNQUFNLFdBQVcsR0FBRyxxQ0FBaUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUU3QyxNQUFNLEtBQUssR0FBRyxJQUFJLGFBQUssQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFFOUMsZUFBZTtBQUNmLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQVMsRUFBRTtJQUN4QyxNQUFNLGFBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7QUFDdkMsQ0FBQyxDQUFBLENBQUMsQ0FBQztBQUVILGlCQUFpQjtBQUNqQixPQUFPLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFTLEVBQUU7SUFDMUMsTUFBTSxhQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLGFBQUssQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztBQUNuRCxDQUFDLENBQUEsQ0FBQyxDQUFDO0FBRUgsa0JBQWtCO0FBQ2xCLE1BQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQVMsRUFBRTtJQUMzRCxNQUFNLGFBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsYUFBSyxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMs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